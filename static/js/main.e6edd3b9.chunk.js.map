{"version":3,"sources":["components/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","title","cardtitle","fontSize","postContainer","padding","margin","breakpointColumnsObj","default","Layout","props","useState","posts","Setposts","useEffect","axios","get","then","res","data","catch","e","console","log","classes","className","AppBar","position","Toolbar","Typography","variant","Button","color","breakpointCols","columnClassName","map","p","Card","CardContent","gutterBottom","body","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAiBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,SAAU,EACVC,aAAa,IAGfC,MAAO,CACLF,SAAU,GAEZG,UAAW,CACPC,SAAU,IAEZC,cAAc,CACVC,QAAQ,GACRC,OAAO,QAITC,EAAuB,CAC3BC,QAAS,EACT,KAAM,EACN,IAAK,EACL,IAAK,GAgEMC,MA9Df,SAAgBC,GACZ,MAAuBC,mBAAS,MAAhC,mBAAOC,EAAP,KAAaC,EAAb,KAGAC,qBAAU,WACXC,IAAMC,IAAI,8CACPC,MAAK,SAACC,GACHL,EAASK,EAAIC,SAGhBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,QAIf,IACN,IAAMG,EAAQ7B,IAGV,OACI,gCACI,qBAAK8B,UAAWD,EAAQ1B,KAAxB,SACI,cAAC4B,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACM,eAACC,EAAA,EAAD,WAEH,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWD,EAAQvB,MAA5C,kBAGG,cAAC8B,EAAA,EAAD,CAAQC,MAAM,UAAd,0BAIb,qBAAKP,UAAWD,EAAQpB,cAAxB,SAEA,cAAC,IAAD,CACP6B,eAAgB1B,EAChBkB,UAAU,kBACVS,gBAAgB,yBAHT,SAOOtB,EAAMuB,KAAI,SAACC,GAAD,OAAM,mCAChB,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACA,cAACT,EAAA,EAAD,CAAYJ,UAAWD,EAAQtB,UAAW8B,MAAM,gBAAgBO,cAAY,EAA5E,6BAGD,cAACV,EAAA,EAAD,UACKO,EAAEI,yBC7EXC,MARf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACC,cAAC,EAAD,OCKUiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e6edd3b9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Masonry from 'react-masonry-css';\r\nimport axios from 'axios';\r\nimport {\r\nAppBar,\r\nToolbar,\r\nTypography,\r\nButton,\r\nmakeStyles,\r\nCard,\r\nCardContent,\r\n\r\n\r\n\r\n\r\n}from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginBottom:30\r\n    },\r\n    \r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    cardtitle: {\r\n        fontSize: 14,\r\n      },\r\n      postContainer:{\r\n          padding:30,\r\n          margin:20\r\n      }\r\n  }));\r\n\r\n  const breakpointColumnsObj = {\r\n    default: 4,\r\n    1100: 3,\r\n    700: 2,\r\n    500: 1\r\n  };\r\nfunction Layout(props) {\r\n    const [posts,Setposts]=useState(null);\r\n\r\n\r\n    useEffect(()=>{\r\n   axios.get('https://jsonplaceholder.typicode.com/posts')\r\n     .then((res)=>{\r\n         Setposts(res.data);\r\n\r\n     })\r\n     .catch((e)=>{\r\n         console.log(e);\r\n     })\r\n \r\n\r\n    },[])\r\nconst classes=useStyles();\r\n\r\n   \r\n    return (\r\n        <div>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                      <Toolbar>\r\n          \r\n                   <Typography variant=\"h6\" className={classes.title}>\r\n                                    News\r\n                   </Typography>\r\n                      <Button color=\"inherit\">Login</Button>\r\n                    </Toolbar>\r\n                 </AppBar>\r\n         </div>\r\n         <div className={classes.postContainer}>\r\n            \r\n         <Masonry\r\n  breakpointCols={breakpointColumnsObj}\r\n  className=\"my-masonry-grid\"\r\n  columnClassName=\"my-masonry-grid_column\">\r\n  {/* array of JSX items */}\r\n\r\n            {\r\n                posts.map((p)=>(<>\r\n                <Card>\r\n                    <CardContent>\r\n                    <Typography className={classes.cardtitle} color=\"textSecondary\" gutterBottom>\r\n                            Word of the Day\r\n                   </Typography>\r\n                   <Typography>\r\n                       {p.body}\r\n                   </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                \r\n                \r\n                </>))\r\n            }\r\n            </Masonry>\r\n         </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;","\nimport './App.css';\nimport Layout from './components/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}